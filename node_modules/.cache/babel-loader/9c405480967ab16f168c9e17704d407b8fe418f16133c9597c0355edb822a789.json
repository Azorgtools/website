{"ast":null,"code":"import express from 'express';\nimport { Client } from 'ssh2';\nconst app = express();\napp.get('/ros/topic/list', (req, res) => {\n  const sshClient = new Client();\n  sshClient.on('ready', () => {\n    sshClient.exec('rostopic list', (err, stream) => {\n      if (err) {\n        res.status(500).send(err.message);\n      } else {\n        let result = '';\n        stream.on('data', data => {\n          result += data.toString();\n        });\n        stream.on('close', () => {\n          sshClient.end();\n          res.send(result);\n        });\n      }\n    });\n  });\n  sshClient.connect({\n    host: 'ros_system_ip',\n    username: 'username',\n    password: 'password'\n  });\n});\napp.listen(3001, () => {\n  console.log('Server started on port 3001');\n});","map":{"version":3,"names":["express","Client","app","get","req","res","sshClient","on","exec","err","stream","status","send","message","result","data","toString","end","connect","host","username","password","listen","console","log"],"sources":["/home/user/jackal_website/src/Components/Molecules/SshConnection/ssh.tsx"],"sourcesContent":["import express from 'express';\nimport { Client } from 'ssh2';\n\nconst app = express();\n\napp.get('/ros/topic/list', (req, res) => {\n  const sshClient = new Client();\n  sshClient.on('ready', () => {\n    sshClient.exec('rostopic list', (err, stream) => {\n      if (err) {\n        res.status(500).send(err.message);\n      } else {\n        let result = '';\n        stream.on('data', (data) => {\n          result += data.toString();\n        });\n        stream.on('close', () => {\n          sshClient.end();\n          res.send(result);\n        });\n      }\n    });\n  });\n  sshClient.connect({\n    host: 'ros_system_ip',\n    username: 'username',\n    password: 'password'\n  });\n});\n\napp.listen(3001, () => {\n  console.log('Server started on port 3001');\n});"],"mappings":"AAAA,OAAOA,OAAO,MAAM,SAAS;AAC7B,SAASC,MAAM,QAAQ,MAAM;AAE7B,MAAMC,GAAG,GAAGF,OAAO,EAAE;AAErBE,GAAG,CAACC,GAAG,CAAC,iBAAiB,EAAE,CAACC,GAAG,EAAEC,GAAG,KAAK;EACvC,MAAMC,SAAS,GAAG,IAAIL,MAAM,EAAE;EAC9BK,SAAS,CAACC,EAAE,CAAC,OAAO,EAAE,MAAM;IAC1BD,SAAS,CAACE,IAAI,CAAC,eAAe,EAAE,CAACC,GAAG,EAAEC,MAAM,KAAK;MAC/C,IAAID,GAAG,EAAE;QACPJ,GAAG,CAACM,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAACH,GAAG,CAACI,OAAO,CAAC;MACnC,CAAC,MAAM;QACL,IAAIC,MAAM,GAAG,EAAE;QACfJ,MAAM,CAACH,EAAE,CAAC,MAAM,EAAGQ,IAAI,IAAK;UAC1BD,MAAM,IAAIC,IAAI,CAACC,QAAQ,EAAE;QAC3B,CAAC,CAAC;QACFN,MAAM,CAACH,EAAE,CAAC,OAAO,EAAE,MAAM;UACvBD,SAAS,CAACW,GAAG,EAAE;UACfZ,GAAG,CAACO,IAAI,CAACE,MAAM,CAAC;QAClB,CAAC,CAAC;MACJ;IACF,CAAC,CAAC;EACJ,CAAC,CAAC;EACFR,SAAS,CAACY,OAAO,CAAC;IAChBC,IAAI,EAAE,eAAe;IACrBC,QAAQ,EAAE,UAAU;IACpBC,QAAQ,EAAE;EACZ,CAAC,CAAC;AACJ,CAAC,CAAC;AAEFnB,GAAG,CAACoB,MAAM,CAAC,IAAI,EAAE,MAAM;EACrBC,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAC;AAC5C,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}