{"ast":null,"code":"var _jsxFileName = \"/home/user/jackal_website/src/Components/Molecules/SshConnection/ssh.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { NodeSSH } from 'node-ssh';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ROS_SYSTEM_IP = 'ros_system_ip';\nconst USERNAME = 'username';\nconst PASSWORD = 'password';\nfunction RosTopicTable() {\n  _s();\n  const [topics, setTopics] = useState([]);\n  useEffect(() => {\n    const ssh = new NodeSSH();\n    ssh.connect({\n      host: ROS_SYSTEM_IP,\n      username: USERNAME,\n      password: PASSWORD\n    }).then(() => {\n      ssh.execCommand('rostopic list').then(result => {\n        const stdout = result.stdout.trim();\n        const stderr = result.stderr.trim();\n        if (stderr) {\n          console.error(`Error: ${stderr}`);\n        } else {\n          const topicNames = stdout.split('\\n');\n          const topicPromises = topicNames.map(name => {\n            return ssh.execCommand(`rostopic info ${name}`).then(infoResult => {\n              const infoStdout = infoResult.stdout.trim();\n              const infoLines = infoStdout.split('\\n');\n              const typeLine = infoLines.find(line => line.startsWith('Type: '));\n              const type = typeLine ? typeLine.replace('Type: ', '') : '';\n              return {\n                name,\n                type\n              };\n            });\n          });\n          Promise.all(topicPromises).then(topics => {\n            setTopics(topics);\n          }).finally(() => {\n            ssh.dispose();\n          });\n        }\n      });\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Type\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: topics.map(topic => /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: topic.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: topic.type\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this)]\n      }, topic.name, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n_s(RosTopicTable, \"5PrH2L6CTp15aUV0qkyKrxReD80=\");\n_c = RosTopicTable;\nexport default RosTopicTable;\nvar _c;\n$RefreshReg$(_c, \"RosTopicTable\");","map":{"version":3,"names":["React","useState","useEffect","NodeSSH","jsxDEV","_jsxDEV","ROS_SYSTEM_IP","USERNAME","PASSWORD","RosTopicTable","_s","topics","setTopics","ssh","connect","host","username","password","then","execCommand","result","stdout","trim","stderr","console","error","topicNames","split","topicPromises","map","name","infoResult","infoStdout","infoLines","typeLine","find","line","startsWith","type","replace","Promise","all","finally","dispose","children","fileName","_jsxFileName","lineNumber","columnNumber","topic","_c","$RefreshReg$"],"sources":["/home/user/jackal_website/src/Components/Molecules/SshConnection/ssh.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { NodeSSH } from 'node-ssh';\n\ninterface RosTopic {\n  name: string;\n  type: string;\n}\n\nconst ROS_SYSTEM_IP = 'ros_system_ip';\nconst USERNAME = 'username';\nconst PASSWORD = 'password';\n\nfunction RosTopicTable() {\n  const [topics, setTopics] = useState<RosTopic[]>([]);\n\n  useEffect(() => {\n    const ssh = new NodeSSH();\n    ssh.connect({\n      host: ROS_SYSTEM_IP,\n      username: USERNAME,\n      password: PASSWORD\n    }).then(() => {\n      ssh.execCommand('rostopic list').then(result => {\n        const stdout = result.stdout.trim();\n        const stderr = result.stderr.trim();\n        if (stderr) {\n          console.error(`Error: ${stderr}`);\n        } else {\n          const topicNames = stdout.split('\\n');\n          const topicPromises = topicNames.map(name => {\n            return ssh.execCommand(`rostopic info ${name}`).then(infoResult => {\n              const infoStdout = infoResult.stdout.trim();\n              const infoLines = infoStdout.split('\\n');\n              const typeLine = infoLines.find(line => line.startsWith('Type: '));\n              const type = typeLine ? typeLine.replace('Type: ', '') : '';\n              return { name, type };\n            });\n          });\n          Promise.all(topicPromises).then(topics => {\n            setTopics(topics);\n          }).finally(() => {\n            ssh.dispose();\n          });\n        }\n      });\n    });\n  }, []);\n\n  return (\n    <table>\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Type</th>\n        </tr>\n      </thead>\n      <tbody>\n        {topics.map(topic => (\n          <tr key={topic.name}>\n            <td>{topic.name}</td>\n            <td>{topic.type}</td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n}\n\nexport default RosTopicTable;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}