{"ast":null,"code":"import { NodeSSH } from 'node-ssh';\nasync function getRosTopics() {\n  const ssh = new NodeSSH();\n  await ssh.connect({\n    host: 'ros_system_ip',\n    username: 'username',\n    password: 'password'\n  });\n  const {\n    stdout,\n    stderr\n  } = await ssh.execCommand('rostopic list');\n  if (stderr) {\n    console.error(`Error: ${stderr}`);\n    ssh.dispose();\n    return [];\n  } else {\n    const topics = stdout.trim().split('\\n').map(topic => {\n      const [name, type] = topic.split(' ');\n      return {\n        name,\n        type\n      };\n    });\n    ssh.dispose();\n    return topics;\n  }\n}\nexport { getRosTopics };","map":{"version":3,"names":["NodeSSH","getRosTopics","ssh","connect","host","username","password","stdout","stderr","execCommand","console","error","dispose","topics","trim","split","map","topic","name","type"],"sources":["/home/user/jackal_website/src/Components/Molecules/SshConnection/ssh.tsx"],"sourcesContent":["import { NodeSSH } from 'node-ssh';\n\ninterface RosTopic {\n  name: string;\n  type: string;\n}\n\nasync function getRosTopics(): Promise<RosTopic[]> {\n  const ssh = new NodeSSH();\n  await ssh.connect({\n    host: 'ros_system_ip',\n    username: 'username',\n    password: 'password'\n  });\n\n  const { stdout, stderr } = await ssh.execCommand('rostopic list');\n  if (stderr) {\n    console.error(`Error: ${stderr}`);\n    ssh.dispose();\n    return [];\n  } else {\n    const topics = stdout.trim().split('\\n')\n      .map(topic => {\n        const [name, type] = topic.split(' ');\n        return { name, type };\n      });\n    ssh.dispose();\n    return topics;\n  }\n}\n\nexport { getRosTopics, RosTopic };\n"],"mappings":"AAAA,SAASA,OAAO,QAAQ,UAAU;AAOlC,eAAeC,YAAYA,CAAA,EAAwB;EACjD,MAAMC,GAAG,GAAG,IAAIF,OAAO,EAAE;EACzB,MAAME,GAAG,CAACC,OAAO,CAAC;IAChBC,IAAI,EAAE,eAAe;IACrBC,QAAQ,EAAE,UAAU;IACpBC,QAAQ,EAAE;EACZ,CAAC,CAAC;EAEF,MAAM;IAAEC,MAAM;IAAEC;EAAO,CAAC,GAAG,MAAMN,GAAG,CAACO,WAAW,CAAC,eAAe,CAAC;EACjE,IAAID,MAAM,EAAE;IACVE,OAAO,CAACC,KAAK,CAAE,UAASH,MAAO,EAAC,CAAC;IACjCN,GAAG,CAACU,OAAO,EAAE;IACb,OAAO,EAAE;EACX,CAAC,MAAM;IACL,MAAMC,MAAM,GAAGN,MAAM,CAACO,IAAI,EAAE,CAACC,KAAK,CAAC,IAAI,CAAC,CACrCC,GAAG,CAACC,KAAK,IAAI;MACZ,MAAM,CAACC,IAAI,EAAEC,IAAI,CAAC,GAAGF,KAAK,CAACF,KAAK,CAAC,GAAG,CAAC;MACrC,OAAO;QAAEG,IAAI;QAAEC;MAAK,CAAC;IACvB,CAAC,CAAC;IACJjB,GAAG,CAACU,OAAO,EAAE;IACb,OAAOC,MAAM;EACf;AACF;AAEA,SAASZ,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}