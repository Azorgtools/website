{"ast":null,"code":"import SSH from \"node-ssh\";\nconst ssh = new SSH();\nasync function connectToRemoteServer() {\n  try {\n    // Connect to the remote server using username and password\n    await ssh.connect({\n      host: '100.121.193.21',\n      username: 'administrator',\n      password: 'clearpath'\n    });\n  } catch (error) {\n    console.error('Error connecting to remote server:', error);\n  }\n}\nconst SshConnection = () => {\n  connectToRemoteServer();\n  return null;\n};\n_c = SshConnection;\nexport default SshConnection;\nvar _c;\n$RefreshReg$(_c, \"SshConnection\");","map":{"version":3,"names":["SSH","ssh","connectToRemoteServer","connect","host","username","password","error","console","SshConnection","_c","$RefreshReg$"],"sources":["/home/user/jackal_website/src/Components/Molecules/SshConnection/ssh.tsx"],"sourcesContent":["import { Fragment, FunctionComponent } from \"react\";\nimport SSH from \"node-ssh\";\nconst ssh = new SSH();\n\n\nasync function connectToRemoteServer() {\n\n  try {\n    // Connect to the remote server using username and password\n    await ssh.connect({\n      host: '100.121.193.21',\n      username: 'administrator',\n      password: 'clearpath'\n    });\n  } catch (error) {\n    console.error('Error connecting to remote server:', error);\n  }\n\n}\nconst SshConnection: FunctionComponent= () => {\n    \n  connectToRemoteServer();\n    return ( \n      \n      null\n    );\n}\n\nexport default SshConnection;\n"],"mappings":"AACA,OAAOA,GAAG,MAAM,UAAU;AAC1B,MAAMC,GAAG,GAAG,IAAID,GAAG,EAAE;AAGrB,eAAeE,qBAAqBA,CAAA,EAAG;EAErC,IAAI;IACF;IACA,MAAMD,GAAG,CAACE,OAAO,CAAC;MAChBC,IAAI,EAAE,gBAAgB;MACtBC,QAAQ,EAAE,eAAe;MACzBC,QAAQ,EAAE;IACZ,CAAC,CAAC;EACJ,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,oCAAoC,EAAEA,KAAK,CAAC;EAC5D;AAEF;AACA,MAAME,aAAgC,GAAEA,CAAA,KAAM;EAE5CP,qBAAqB,EAAE;EACrB,OAEE,IAAI;AAEV,CAAC;AAAAQ,EAAA,GAPKD,aAAgC;AAStC,eAAeA,aAAa;AAAC,IAAAC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}