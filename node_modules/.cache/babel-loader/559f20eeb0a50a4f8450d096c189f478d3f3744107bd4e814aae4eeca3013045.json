{"ast":null,"code":"var _jsxFileName = \"/home/user/jackal_website/src/Components/Molecules/SshConnection/ssh.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Client } from 'ssh2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RosTopicList = () => {\n  _s();\n  const [rosTopics, setRosTopics] = useState([]);\n  const [errorMessage, setErrorMessage] = useState('');\n  useEffect(() => {\n    const sshClient = new Client();\n    sshClient.on('ready', () => {\n      sshClient.exec('rostopic list', (err, stream) => {\n        if (err) {\n          setErrorMessage(err.message);\n        } else {\n          let result = '';\n          stream.on('data', data => {\n            result += data.toString();\n          });\n          stream.on('close', () => {\n            sshClient.end();\n            const topics = result.split('\\n').filter(topic => topic !== '').map(topic => {\n              const [name, type] = topic.split(' ');\n              return {\n                name,\n                type\n              };\n            });\n            setRosTopics(topics);\n          });\n        }\n      });\n    });\n    sshClient.connect({\n      host: 'ros_system_ip',\n      username: 'username',\n      password: 'password'\n    });\n  }, []);\n  if (errorMessage) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", errorMessage]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 12\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"ROS Topics\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: rosTopics.map(topic => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [topic.name, \" (\", topic.type, \")\"]\n        }, topic.name, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this);\n  }\n};\n_s(RosTopicList, \"3kGDt2yrDMGc8Z616+El4BrPiuo=\");\n_c = RosTopicList;\nexport default RosTopicList;\nvar _c;\n$RefreshReg$(_c, \"RosTopicList\");","map":{"version":3,"names":["React","useState","useEffect","Client","jsxDEV","_jsxDEV","RosTopicList","_s","rosTopics","setRosTopics","errorMessage","setErrorMessage","sshClient","on","exec","err","stream","message","result","data","toString","end","topics","split","filter","topic","map","name","type","connect","host","username","password","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/user/jackal_website/src/Components/Molecules/SshConnection/ssh.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Client } from 'ssh2';\n\ninterface RosTopic {\n  name: string;\n  type: string;\n}\n\nconst RosTopicList: React.FC = () => {\n  const [rosTopics, setRosTopics] = useState<RosTopic[]>([]);\n  const [errorMessage, setErrorMessage] = useState<string>('');\n\n  useEffect(() => {\n    const sshClient = new Client();\n    sshClient.on('ready', () => {\n      sshClient.exec('rostopic list', (err, stream) => {\n        if (err) {\n          setErrorMessage(err.message);\n        } else {\n          let result = '';\n          stream.on('data', (data) => {\n            result += data.toString();\n          });\n          stream.on('close', () => {\n            sshClient.end();\n            const topics = result.split('\\n')\n              .filter(topic => topic !== '')\n              .map(topic => {\n                const [name, type] = topic.split(' ');\n                return { name, type };\n              });\n            setRosTopics(topics);\n          });\n        }\n      });\n    });\n    sshClient.connect({\n      host: 'ros_system_ip',\n      username: 'username',\n      password: 'password'\n    });\n  }, []);\n\n  if (errorMessage) {\n    return <div>Error: {errorMessage}</div>;\n  } else {\n    return (\n      <div>\n        <h1>ROS Topics</h1>\n        <ul>\n          {rosTopics.map(topic => (\n            <li key={topic.name}>{topic.name} ({topic.type})</li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n};\n\nexport default RosTopicList;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,MAAM,QAAQ,MAAM;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAO9B,MAAMC,YAAsB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnC,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAa,EAAE,CAAC;EAC1D,MAAM,CAACS,YAAY,EAAEC,eAAe,CAAC,GAAGV,QAAQ,CAAS,EAAE,CAAC;EAE5DC,SAAS,CAAC,MAAM;IACd,MAAMU,SAAS,GAAG,IAAIT,MAAM,EAAE;IAC9BS,SAAS,CAACC,EAAE,CAAC,OAAO,EAAE,MAAM;MAC1BD,SAAS,CAACE,IAAI,CAAC,eAAe,EAAE,CAACC,GAAG,EAAEC,MAAM,KAAK;QAC/C,IAAID,GAAG,EAAE;UACPJ,eAAe,CAACI,GAAG,CAACE,OAAO,CAAC;QAC9B,CAAC,MAAM;UACL,IAAIC,MAAM,GAAG,EAAE;UACfF,MAAM,CAACH,EAAE,CAAC,MAAM,EAAGM,IAAI,IAAK;YAC1BD,MAAM,IAAIC,IAAI,CAACC,QAAQ,EAAE;UAC3B,CAAC,CAAC;UACFJ,MAAM,CAACH,EAAE,CAAC,OAAO,EAAE,MAAM;YACvBD,SAAS,CAACS,GAAG,EAAE;YACf,MAAMC,MAAM,GAAGJ,MAAM,CAACK,KAAK,CAAC,IAAI,CAAC,CAC9BC,MAAM,CAACC,KAAK,IAAIA,KAAK,KAAK,EAAE,CAAC,CAC7BC,GAAG,CAACD,KAAK,IAAI;cACZ,MAAM,CAACE,IAAI,EAAEC,IAAI,CAAC,GAAGH,KAAK,CAACF,KAAK,CAAC,GAAG,CAAC;cACrC,OAAO;gBAAEI,IAAI;gBAAEC;cAAK,CAAC;YACvB,CAAC,CAAC;YACJnB,YAAY,CAACa,MAAM,CAAC;UACtB,CAAC,CAAC;QACJ;MACF,CAAC,CAAC;IACJ,CAAC,CAAC;IACFV,SAAS,CAACiB,OAAO,CAAC;MAChBC,IAAI,EAAE,eAAe;MACrBC,QAAQ,EAAE,UAAU;MACpBC,QAAQ,EAAE;IACZ,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,IAAItB,YAAY,EAAE;IAChB,oBAAOL,OAAA;MAAA4B,QAAA,GAAK,SAAO,EAACvB,YAAY;IAAA;MAAAwB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAO;EACzC,CAAC,MAAM;IACL,oBACEhC,OAAA;MAAA4B,QAAA,gBACE5B,OAAA;QAAA4B,QAAA,EAAI;MAAU;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAK,eACnBhC,OAAA;QAAA4B,QAAA,EACGzB,SAAS,CAACkB,GAAG,CAACD,KAAK,iBAClBpB,OAAA;UAAA4B,QAAA,GAAsBR,KAAK,CAACE,IAAI,EAAC,IAAE,EAACF,KAAK,CAACG,IAAI,EAAC,GAAC;QAAA,GAAvCH,KAAK,CAACE,IAAI;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QACpB;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACD;EAEV;AACF,CAAC;AAAC9B,EAAA,CAjDID,YAAsB;AAAAgC,EAAA,GAAtBhC,YAAsB;AAmD5B,eAAeA,YAAY;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}